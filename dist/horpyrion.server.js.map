{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap fd5e942a983f039268b0","webpack:///./src/ModelManager.js","webpack:///./src/contexts/Context.js","webpack:///external \"babel-polyfill\"","webpack:///./src/index.js","webpack:///./src/Horpyrion.js","webpack:///./src/contexts/userContext/UserContext.js","webpack:///./src/contexts/actions/createFactory.js","webpack:///./src/contexts/actions/updateFactory.js","webpack:///./src/contexts/actions/getFactory.js","webpack:///./src/contexts/actions/getListFactory.js","webpack:///./src/contexts/actions/removeFactory.js","webpack:///./src/contexts/userContext/schemaContext/SchemaContext.js","webpack:///./src/contexts/userContext/schemaContext/getSchemaContextFactory.js","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"sequelize\"","webpack:///external \"function-overloader\"","webpack:///./src/contexts/userContext/schemaContext/recordContext/RecordContext.js","webpack:///./src/contexts/userContext/schemaContext/recordContext/getRecordContextFactory.js","webpack:///./src/contexts/userContext/getUserContextFactory.js","webpack:///./src/contexts/userContext/userSchemaContext/UserSchemaContext.js","webpack:///./src/contexts/userContext/userSchemaContext/userRecordContext/UserRecordContext.js","webpack:///./src/contexts/userContext/userSchemaContext/userRecordContext/getUserRecordContextFactory.js","webpack:///./src/contexts/ContextAction.js","webpack:///./src/throwIfNoSync.js","webpack:///./src/RootUser.js"],"names":["ModelManager","_isSync","when","Overload","INSTANCE","Sequelize","do","_sequelize","sequelize","else","config","dbname","user","password","dialect","type","port","host","logging","execute","arguments","_models","fs","readdirSync","path","join","__dirname","filter","file","indexOf","forEach","model","import","name","Object","values","associate","options","sync","then","authenticate","catch","console","error","err","MODEL","USER","SCHEMA","RECORD","ATTRIBUTE","ContextAction","contextActionFunction","contextAction","modelManager","_contextAction","copyContextAction","_modelManager","_name","addContextActionFunction","key","executeFactory","addAction","resolve","id","Context","getContextAction","getModelManager","modelId","resolveContextAction","context","getName","default","Horpyrion","configuration","_configuration","onSyncCallback","UserContext","RootUser","ROOT_USER_ID","userId","getDbInstance","schemaName","createFactory","schema","toJSON","query","getListFactory","assign","schemaId","createContext","SchemaContext","UserSchemaContext","data","getModels","create","entity","updateFactory","entityId","update","where","getFactory","findOne","raw","whereData","findAll","removeRecordFactory","destroy","recordId","RecordContext","removeFactory","record","SchemaId","userRecordId","UserRecordContext","userRecord","userRecordList","contextActions","_contextActions","slice","push","concat","reduce","prevContextAction","contextObject","throwIfNoSync","isSync","Promise","reject","Error","Symbol"],"mappings":"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","file":"horpyrion.server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fd5e942a983f039268b0","import fs from \"fs\";\nimport path from \"path\";\nimport Sequelize from \"sequelize\";\nimport Overload from \"function-overloader\";\n\nexport default class ModelManager {\n    static MODEL = {\n        USER: \"User\",\n        SCHEMA: \"Schema\",\n        RECORD: \"Record\",\n        ATTRIBUTE: \"Attribute\"\n    };\n\n    constructor() {\n        this._isSync = false;\n        Overload.when(Overload.INSTANCE(Sequelize))\n            .do(sequelize => {\n                this._sequelize = sequelize;\n            })\n            .else(config => {\n                this._sequelize = new Sequelize(config.dbname, config.user, config.password, {\n                    dialect: config.type,\n                    port: config.port,\n                    host: config.host,\n                    logging: config.logging\n                });\n            })\n            .execute(...arguments);\n        this._models = {};\n        fs.readdirSync(path.join(__dirname, \"models\"))\n            .filter(file => {\n                return file.indexOf(\".\") !== 0;\n            })\n            .forEach(file => {\n                const model = this._sequelize.import(path.join(__dirname, \"models\", file));\n                this._models[model.name] = model;\n            });\n        Object.values(this._models).forEach(model => {\n            if (model.associate) {\n                model.associate(this._models);\n            }\n        });\n    }\n\n    getDbInstance() {\n        return this._sequelize;\n    }\n\n    async sync(options) {\n        return this._sequelize.sync(options).then(() => {\n            this._isSync = true;\n        });\n    }\n\n    isSync() {\n        return this._isSync;\n    }\n\n    getModels() {\n        return this._models;\n    }\n\n    async authenticate() {\n        return this._sequelize\n            .authenticate()\n            .then(() => {})\n            .catch(err => {\n                console.error(\"Unable to connect to the database:\", err);\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ModelManager.js","import createFactory from \"./actions/createFactory\";\nimport updateFactory from \"./actions/updateFactory\";\nimport getFactory from \"./actions/getFactory\";\nimport getListFactory from \"./actions/getListFactory\";\nimport removeFactory from \"./actions/removeFactory\";\n\nexport default class ContextAction {\n    constructor({ name, contextActionFunction, contextAction, modelManager }) {\n        this._contextAction = contextAction.copyContextAction();\n        this._modelManager = modelManager;\n        this._name = name;\n        if (contextActionFunction) {\n            this.addContextActionFunction(this._name, contextActionFunction);\n        }\n    }\n\n    getName() {\n        return this._name;\n    }\n\n    addContextActionFunction(key, executeFactory) {\n        this._contextAction.addAction(key, executeFactory);\n    }\n\n    getContextAction() {\n        return this._contextAction;\n    }\n\n    resolveContextAction() {\n        return this._contextAction.resolve();\n    }\n\n    getModelManager() {\n        return this._modelManager;\n    }\n\n    createContext(id, Context) {\n        return new Context(id, this.getContextAction(), this.getModelManager());\n    }\n\n    createFactory(modelId) {\n        return createFactory(modelId, this.getModelManager());\n    }\n\n    updateFactory(modelId) {\n        return updateFactory(modelId, this.getModelManager());\n    }\n\n    getFactory(modelId) {\n        return getFactory(modelId, this.getModelManager());\n    }\n\n    getListFactory(modelId) {\n        return getListFactory(modelId, this.getModelManager());\n    }\n\n    removeFactory(modelId) {\n        return removeFactory(modelId, this.getModelManager());\n    }\n\n    getData() {\n        return this.resolveContextAction().then(context => context[this.getName()]);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/Context.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 3\n// module chunks = 0","export default from \"./Horpyrion\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import UserContext from \"./contexts/userContext/UserContext\";\nimport ContextAction from \"./contexts/ContextAction\";\nimport RootUser from \"./RootUser\";\nimport ModelManager from \"./ModelManager\";\n\nexport default class Horpyrion {\n    constructor(configuration) {\n        this._configuration = configuration;\n    }\n    sync(options, onSyncCallback) {\n        this._modelManager = new ModelManager(this._configuration);\n        return this._modelManager\n            .authenticate()\n            .then(() => this._modelManager.sync(options))\n            .then(() => {\n                if (onSyncCallback) {\n                    return onSyncCallback(this);\n                }\n            });\n    }\n\n    setRootUser() {\n        const contextAction = new ContextAction(this._modelManager);\n        return new UserContext(RootUser.ROOT_USER_ID, contextAction, this._modelManager);\n    }\n\n    setUser(userId) {\n        const contextAction = new ContextAction(this._modelManager);\n        return new UserContext(userId, contextAction, this._modelManager);\n    }\n\n    getDbInstance() {\n        return this._modelManager.getDbInstance();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Horpyrion.js","import Context from \"../Context\";\nimport SchemaContext from \"./schemaContext/SchemaContext\";\nimport getUserContextFactory from \"./getUserContextFactory\";\nimport UserSchemaContext from \"./userSchemaContext/UserSchemaContext\";\nimport ModelManager from \"../../ModelManager\";\n\nexport default class UserContext extends Context {\n    constructor(userId, contextAction, modelManager) {\n        super({\n            name: \"user\",\n            contextActionFunction: getUserContextFactory(userId),\n            contextAction,\n            modelManager\n        });\n    }\n\n    createSchema(schemaName) {\n        return this.resolveContextAction()\n            .then(() => this.createFactory(ModelManager.MODEL.SCHEMA)({ name: schemaName }))\n            .then(schema => schema.toJSON());\n    }\n\n    // getSchema(schemaId) {\n    //     return this.resolveContextAction().then(() =>\n    //         this.getFactory(ModelManager.MODEL.SCHEMA)(schemaId).then(schema => {\n    //             if (schema) {\n    //                 return schema;\n    //             } else {\n    //                 return null;\n    //             }\n    //         })\n    //     );\n    // }\n\n    getSchemas(query) {\n        return this.resolveContextAction().then(() =>\n            this.getListFactory(ModelManager.MODEL.SCHEMA)(Object.assign({}, query))\n        );\n    }\n\n    // updateSchema(schemaId, schemaName) {\n    //     return this.resolveContextAction()\n    //         .then(() => this.updateFactory(ModelManager.MODEL.SCHEMA)(schemaId, { name: schemaName }))\n    //         .then(() => true);\n    // }\n    //\n    // removeSchema(schemaId) {\n    //     return this.resolveContextAction()\n    //         .then(() => this.removeFactory(ModelManager.MODEL.SCHEMA)(schemaId))\n    //         .then(() => true);\n    // }\n\n    setSchema(schemaId) {\n        return this.createContext(schemaId, SchemaContext);\n    }\n\n    setUserSchema() {\n        return this.createContext(null, UserSchemaContext);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/UserContext.js","export default function createFactory(modelId, modelManager) {\n    return (data = {}) =>\n        modelManager\n            .getModels()\n            [modelId].create(data, {})\n            .then(entity => {\n                return entity;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/createFactory.js","export default function updateFactory(modelId, modelManager) {\n    return (entityId, data = {}) =>\n        modelManager\n            .getModels()\n            [modelId].update(data, {\n                where: {\n                    id: entityId\n                }\n            })\n\n            .then(entity => entity);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/updateFactory.js","export default function getFactory(modelId, modelManager) {\n    return entityId =>\n        modelManager\n            .getModels()\n            [modelId].findOne({\n                where: {\n                    id: entityId\n                },\n                raw: true\n            })\n            .then(entity => {\n                return entity;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/getFactory.js","export default function getListFactory(modelId, modelManager) {\n    return (whereData = {}) =>\n        modelManager\n            .getModels()\n            [modelId].findAll({\n                where: whereData,\n                raw: true\n            })\n            .then(entity => {\n                return entity;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/getListFactory.js","export default function removeRecordFactory(modelId, modelManager) {\n    return entityId =>\n        modelManager\n            .getModels()\n            [modelId].destroy({\n                where: {\n                    id: entityId\n                }\n            })\n\n            .then(() => true);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/removeFactory.js","import Context from \"../../Context\";\nimport getSchemaContextFactory from \"./getSchemaContextFactory\";\nimport RecordContext from \"./recordContext/RecordContext\";\nimport ModelManager from \"../../../ModelManager\";\n\nexport default class SchemaContext extends Context {\n    constructor(schemaId, contextAction, modelManager) {\n        super({\n            name: \"schema\",\n            contextActionFunction: getSchemaContextFactory(schemaId),\n            contextAction,\n            modelManager\n        });\n    }\n\n    setRecord(recordId) {\n        return new RecordContext(recordId, this._contextAction, this._modelManager);\n    }\n\n    updateSchema(schemaName) {\n        return this.resolveContextAction()\n            .then(({ schema }) => this.updateFactory(ModelManager.MODEL.SCHEMA)(schema.id, { name: schemaName }))\n            .then(() => true);\n    }\n\n    removeSchema() {\n        return this.resolveContextAction()\n            .then(({ schema }) => this.removeFactory(ModelManager.MODEL.SCHEMA)(schema.id))\n            .then(() => true);\n    }\n\n    getRecord(recordId) {\n        return this.resolveContextAction().then(({ schema }) =>\n            this.getFactory(ModelManager.MODEL.RECORD)(recordId).then(record => {\n                if (record && record.SchemaId === schema.id) {\n                    return record;\n                } else {\n                    return null;\n                }\n            })\n        );\n    }\n\n    getRecords(query) {\n        return this.resolveContextAction().then(({ schema }) =>\n            this.getListFactory(ModelManager.MODEL.RECORD)(Object.assign({}, query, { SchemaId: schema.id }))\n        );\n    }\n\n    createRecord(data) {\n        return this.resolveContextAction()\n            .then(({ schema }) => this.createFactory(ModelManager.MODEL.RECORD)({ data: data, SchemaId: schema.id }))\n            .then(record => record.toJSON());\n    }\n\n    updateRecord(recordId, data) {\n        return this.resolveContextAction()\n            .then(() => this.updateFactory(ModelManager.MODEL.RECORD)(recordId, { data: data }))\n            .then(() => true);\n    }\n\n    removeRecord(recordId) {\n        return this.resolveContextAction()\n            .then(() => this.removeFactory(ModelManager.MODEL.RECORD)(recordId))\n            .then(() => true);\n    }\n\n    async getAttributes() {\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/schemaContext/SchemaContext.js","import ModelManager from \"../../../ModelManager\";\n\nexport default schemaId => modelManager => () => {\n    return modelManager\n        .getModels()\n        [ModelManager.MODEL.SCHEMA].findOne({\n            where: {\n                id: schemaId\n            },\n            raw: true\n        })\n        .then(schema => {\n            if (!schema) {\n            }\n            return schema;\n        });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/schemaContext/getSchemaContextFactory.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"function-overloader\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"function-overloader\"\n// module id = 17\n// module chunks = 0","import Context from \"../../../Context\";\nimport getRecordContextFactory from \"./getRecordContextFactory\";\nimport ModelManager from \"../../../../ModelManager\";\n\nexport default class RecordContext extends Context {\n    constructor(recordId, contextAction, modelManager) {\n        super({\n            name: \"record\",\n            contextActionFunction: getRecordContextFactory(recordId),\n            contextAction,\n            modelManager\n        });\n    }\n\n    updateRecord(data) {\n        return this.resolveContextAction()\n            .then(({ record }) => this.updateFactory(ModelManager.MODEL.RECORD)(record.id, { data: data }))\n            .then(() => true);\n    }\n\n    removeRecord() {\n        return this.resolveContextAction()\n            .then(({ record }) => this.removeFactory(ModelManager.MODEL.RECORD)(record.id))\n            .then(() => true);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/schemaContext/recordContext/RecordContext.js","import ModelManager from \"../../../../ModelManager\";\n\nexport default recordId => modelManager => ({ schema }) => {\n    return modelManager\n        .getModels()\n        [ModelManager.MODEL.RECORD].findOne({\n            where: {\n                SchemaId: schema.id,\n                id: recordId\n            },\n            raw: true\n        })\n        .then(record => {\n            if (!record) {\n            }\n            return record;\n        });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/schemaContext/recordContext/getRecordContextFactory.js","import ModelManager from \"../../ModelManager\";\n\nexport default userId => modelManager => () => {\n    return modelManager\n        .getModels()\n        [ModelManager.MODEL.USER].findOne({\n            where: {\n                id: userId\n            },\n            raw: true\n        })\n        .then(user => {\n            if (!user) {\n            }\n            return user;\n        });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/getUserContextFactory.js","import Context from \"../../Context\";\nimport UserRecordContext from \"./userRecordContext/UserRecordContext\";\nimport ModelManager from \"../../../ModelManager\";\n\nexport default class UserSchemaContext extends Context {\n    constructor(id, contextAction, modelManager) {\n        super({\n            name: \"userSchema\",\n            contextAction,\n            modelManager\n        });\n    }\n\n    setUserRecord(userRecordId) {\n        return new UserRecordContext(userRecordId, this._contextAction, this._modelManager);\n    }\n\n    createRecord(name) {\n        return this.resolveContextAction()\n            .then(() => this.createFactory(ModelManager.MODEL.USER)({ name: name }))\n            .then(user => user.toJSON());\n    }\n\n    updateRecord(recordId, data) {\n        return this.resolveContextAction()\n            .then(() => this.updateFactory(ModelManager.MODEL.USER)(recordId, data))\n            .then(() => true);\n    }\n\n    removeRecord(recordId) {\n        return this.resolveContextAction()\n            .then(() => this.removeFactory(ModelManager.MODEL.USER)(recordId))\n            .then(() => true);\n    }\n\n    getRecord(userId) {\n        return this.resolveContextAction()\n            .then(() => this.getFactory(ModelManager.MODEL.USER)(userId))\n            .then(userRecord => {\n                if (userRecord) {\n                    return userRecord;\n                } else {\n                    return null;\n                }\n            });\n    }\n\n    getRecords(query) {\n        return this.resolveContextAction()\n            .then(() => this.getListFactory(ModelManager.MODEL.USER)(query))\n            .then(userRecordList => userRecordList);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/userSchemaContext/UserSchemaContext.js","import Context from \"../../../Context\";\nimport getUserRecordContextFactory from \"./getUserRecordContextFactory\";\nimport ModelManager from \"../../../../ModelManager\";\n\nexport default class UserRecordContext extends Context {\n    constructor(userRecordId, contextAction, modelManager) {\n        super({\n            name: \"userRecord\",\n            contextActionFunction: getUserRecordContextFactory(userRecordId),\n            contextAction,\n            modelManager\n        });\n    }\n\n    updateRecord(data) {\n        return this.resolveContextAction()\n            .then(({ userRecord }) => this.updateFactory(ModelManager.MODEL.USER)(userRecord.id, data))\n            .then(() => true);\n    }\n\n    removeRecord() {\n        return this.resolveContextAction()\n            .then(({ userRecord }) => this.removeFactory(ModelManager.MODEL.USER)(userRecord.id))\n            .then(() => true);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/userSchemaContext/userRecordContext/UserRecordContext.js","import ModelManager from \"../../../../ModelManager\";\n\nexport default userRecordId => modelManager => () => {\n    return modelManager\n        .getModels()\n        [ModelManager.MODEL.USER].findOne({\n            where: {\n                id: userRecordId\n            },\n            raw: true\n        })\n        .then(record => {\n            if (!record) {\n            }\n            return record;\n        });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/userSchemaContext/userRecordContext/getUserRecordContextFactory.js","import throwIfNoSync from \"../throwIfNoSync\";\n\nexport default class ContextAction {\n    constructor(modelManager, contextActions = []) {\n        this._contextActions = contextActions;\n        this._modelManager = modelManager;\n    }\n\n    copyContextAction() {\n        return new ContextAction(this._modelManager, this._contextActions.slice());\n    }\n\n    addAction(key, executeFactory) {\n        this._contextActions.push({ key, execute: executeFactory(this._modelManager) });\n    }\n\n    createContextAction(key, executeFactory) {\n        return new ContextAction(\n            this._modelManager,\n            this._contextActions.concat([{ key, execute: executeFactory(this._modelManager) }])\n        );\n    }\n\n    resolve() {\n        return this._contextActions.reduce((prevContextAction, contextAction) => {\n            return prevContextAction.then(contextObject =>\n                contextAction.execute(contextObject).then(context => {\n                    return Object.assign({}, contextObject, { [contextAction.key]: context });\n                })\n            );\n        }, throwIfNoSync(this._modelManager).then(() => {}));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/ContextAction.js","export default function throwIfNoSync(modelManager) {\n    if (modelManager && modelManager.isSync()) {\n        return Promise.resolve();\n    } else {\n        return Promise.reject(new Error(\"No synchronization with database. Run sync() method\"));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/throwIfNoSync.js","const ROOT_USER_ID = Symbol(\"ROOT_USER_ID\");\nexport default ROOT_USER_ID;\n\n\n\n// WEBPACK FOOTER //\n// ./src/RootUser.js"],"sourceRoot":""}