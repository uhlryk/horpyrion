{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 745ca0f65e6666c046e8","webpack:///./src/throwIfNoSync.js","webpack:///external \"babel-polyfill\"","webpack:///./src/index.js","webpack:///./src/Horpyrion.js","webpack:///./src/contexts/userContext/UserContext.js","webpack:///./src/contexts/schemaContext/SchemaContext.js","webpack:///./src/contexts/schemaContext/actions/createRecordFactory.js","webpack:///./src/contexts/schemaContext/actions/getRecordListFactory.js","webpack:///./src/contexts/schemaContext/actions/getRecordFactory.js","webpack:///./src/contexts/schemaContext/actions/updateRecordFactory.js","webpack:///./src/contexts/schemaContext/actions/removeRecordFactory.js","webpack:///./src/contexts/schemaContext/contextActions/getSchemaContextFactory.js","webpack:///./src/contexts/recordContext/RecordContext.js","webpack:///./src/contexts/recordContext/actions/updateRecordFactory.js","webpack:///./src/contexts/recordContext/actions/removeRecordFactory.js","webpack:///./src/contexts/recordContext/contextActions/getRecordContextFactory.js","webpack:///./src/contexts/userContext/actions/createSchemaFactory.js","webpack:///./src/contexts/userContext/contextActions/getUserContextFactory.js","webpack:///./src/contexts/userSchemaContext/UserSchemaContext.js","webpack:///./src/contexts/userSchemaContext/actions/createUserRecordFactory.js","webpack:///./src/contexts/userSchemaContext/actions/updateUserRecordFactory.js","webpack:///./src/RootUser.js","webpack:///./src/ModelManager.js","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"sequelize\"","webpack:///external \"function-overloader\""],"names":["throwIfNoSync","modelManager","isSync","Promise","resolve","reject","Error","default","Horpyrion","configuration","_configuration","options","_modelManager","ModelManager","authenticate","sync","UserContext","RootUser","ROOT_USER_ID","userId","getDbInstance","_userContextAction","schemaName","createSchemaAction","then","schema","toJSON","schemaId","SchemaContext","UserSchemaContext","userContextAction","_schemaContextAction","recordId","RecordContext","attributeName","attributeType","getRecordAction","id","record","query","getRecordListAction","recordList","data","createRecordAction","updateRecordAction","removeRecordAction","createRecordFactory","getModels","Record","create","SchemaId","getRecordListFactory","findAll","where","raw","findOne","updateRecordFactory","update","removeRecordFactory","destroy","getContextSchemaFactory","Schema","schemaContextAction","_recordContextAction","getContextRecordFactory","createSchemaFactory","name","entitySchema","getContextUserFactory","User","UserId","user","createUserRecordAction","updateUserRecordAction","createUserRecordFactory","userName","updateUserRecordFactory","Symbol","_isSync","when","Overload","INSTANCE","Sequelize","do","_sequelize","sequelize","else","config","dbname","password","dialect","type","port","host","logging","execute","arguments","_models","fs","readdirSync","path","join","__dirname","filter","file","indexOf","forEach","model","import","Object","values","associate","catch","console","error","err"],"mappings":"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","file":"horpyrion.server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 745ca0f65e6666c046e8","export default function throwIfNoSync(modelManager) {\n    if (modelManager && modelManager.isSync()) {\n        return Promise.resolve();\n    } else {\n        return Promise.reject(new Error(\"No synchronization with database. Run sync() method\"));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/throwIfNoSync.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 2\n// module chunks = 0","export default from \"./Horpyrion\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import UserContext from \"./contexts/userContext/UserContext\";\nimport RootUser from \"./RootUser\";\nimport ModelManager from \"./ModelManager\";\n\nexport default class Horpyrion {\n    constructor(configuration) {\n        this._configuration = configuration;\n    }\n    async sync(options) {\n        this._modelManager = new ModelManager(this._configuration);\n        await this._modelManager.authenticate();\n        await this._modelManager.sync(options);\n    }\n\n    setRootUser() {\n        return new UserContext(RootUser.ROOT_USER_ID, this._modelManager);\n    }\n\n    setUser(userId) {\n        return new UserContext(userId, this._modelManager);\n    }\n\n    getDbInstance() {\n        return this._modelManager.getDbInstance();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Horpyrion.js","import SchemaContext from \"../schemaContext/SchemaContext\";\nimport createSchemaFactory from \"./actions/createSchemaFactory\";\nimport throwIfNoSync from \"../../throwIfNoSync\";\nimport getUserContextFactory from \"./contextActions/getUserContextFactory\";\nimport UserSchemaContext from \"../userSchemaContext/UserSchemaContext\";\n\nexport default class UserContext {\n    constructor(userId, modelManager) {\n        this._userContextAction = getUserContextFactory(userId, modelManager);\n        this._modelManager = modelManager;\n    }\n\n    createSchema(schemaName) {\n        const createSchemaAction = createSchemaFactory(schemaName, this._modelManager);\n        return throwIfNoSync(this._modelManager)\n            .then(() => createSchemaAction())\n            .then(schema => schema.toJSON());\n    }\n\n    setSchema(schemaId) {\n        return new SchemaContext(schemaId, this._userContextAction, this._modelManager);\n    }\n\n    setUserSchema() {\n        return new UserSchemaContext(this._userContextAction, this._modelManager);\n    }\n\n    getData() {\n        return throwIfNoSync(this._modelManager).then(() => this._userContextAction());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/UserContext.js","import createRecordFactory from \"./actions/createRecordFactory\";\nimport getRecordListFactory from \"./actions/getRecordListFactory\";\nimport getRecordFactory from \"./actions/getRecordFactory\";\nimport updateRecordFactory from \"./actions/updateRecordFactory\";\nimport removeRecordFactory from \"./actions/removeRecordFactory\";\nimport throwIfNoSync from \"../../throwIfNoSync\";\nimport getSchemaContextFactory from \"./contextActions/getSchemaContextFactory\";\nimport RecordContext from \"../recordContext/RecordContext\";\n\nexport default class SchemaContext {\n    constructor(schemaId, userContextAction, modelManager) {\n        this._userContextAction = userContextAction;\n        this._schemaContextAction = getSchemaContextFactory(schemaId, modelManager);\n        this._modelManager = modelManager;\n    }\n\n    setRecord(recordId) {\n        return new RecordContext(recordId, this._schemaContextAction, this._userContextAction, this._modelManager);\n    }\n\n    async addAttribute(attributeName, attributeType) {\n        return false;\n    }\n\n    getData() {\n        return throwIfNoSync(this._modelManager).then(() => this._schemaContextAction());\n    }\n\n    getRecord(recordId) {\n        const getRecordAction = getRecordFactory(recordId, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema => getRecordAction(schema.id))\n            .then(record => {\n                if (record) {\n                    return record;\n                } else {\n                    return null;\n                }\n            });\n    }\n\n    getRecords(query) {\n        const getRecordListAction = getRecordListFactory(query, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema => getRecordListAction(schema.id))\n            .then(recordList => recordList);\n    }\n\n    createRecord(data) {\n        const createRecordAction = createRecordFactory(data, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema => createRecordAction(schema.id))\n            .then(record => record.toJSON());\n    }\n\n    updateRecord(recordId, data) {\n        const updateRecordAction = updateRecordFactory(data, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema => updateRecordAction(recordId, schema.id))\n            .then(() => true);\n    }\n\n    removeRecord(recordId) {\n        const removeRecordAction = removeRecordFactory(this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema => removeRecordAction(recordId, schema.id))\n            .then(() => true);\n    }\n\n    async getAttributes() {\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/schemaContext/SchemaContext.js","export default function createRecordFactory(data, modelManager) {\n    return schemaId =>\n        modelManager\n            .getModels()\n            .Record.create({\n                SchemaId: schemaId,\n                data: data\n            })\n\n            .then(record => record);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/schemaContext/actions/createRecordFactory.js","export default function getRecordListFactory(query, modelManager) {\n    return schemaId =>\n        modelManager\n            .getModels()\n            .Record.findAll({\n                where: {\n                    SchemaId: schemaId\n                },\n                raw: true\n            })\n            .then(recordList => {\n                return recordList;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/schemaContext/actions/getRecordListFactory.js","export default function getRecordListFactory(recordId, modelManager) {\n    return schemaId =>\n        modelManager\n            .getModels()\n            .Record.findOne({\n                where: {\n                    SchemaId: schemaId,\n                    id: recordId\n                },\n                raw: true\n            })\n            .then(record => {\n                return record;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/schemaContext/actions/getRecordFactory.js","export default function updateRecordFactory(data, modelManager) {\n    return (recordId, schemaId) =>\n        modelManager\n            .getModels()\n            .Record.update(\n                { data: data },\n                {\n                    where: {\n                        id: recordId,\n                        SchemaId: schemaId\n                    }\n                }\n            )\n\n            .then(record => record);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/schemaContext/actions/updateRecordFactory.js","export default function removeRecordFactory(modelManager) {\n    return (recordId, schemaId) =>\n        modelManager\n            .getModels()\n            .Record.destroy({\n                where: {\n                    id: recordId,\n                    SchemaId: schemaId\n                }\n            })\n\n            .then(() => true);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/schemaContext/actions/removeRecordFactory.js","export default function getContextSchemaFactory(schemaId, modelManager) {\n    return () =>\n        modelManager\n            .getModels()\n            .Schema.findOne({\n                where: {\n                    id: schemaId\n                },\n                raw: true\n            })\n            .then(schema => {\n                if (!schema) {\n                }\n                return schema;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/schemaContext/contextActions/getSchemaContextFactory.js","import updateRecordFactory from \"./actions/updateRecordFactory\";\nimport removeRecordFactory from \"./actions/removeRecordFactory\";\nimport throwIfNoSync from \"../../throwIfNoSync\";\nimport getRecordContextFactory from \"./contextActions/getRecordContextFactory\";\n\nexport default class RecordContext {\n    constructor(recordId, schemaContextAction, userContextAction, modelManager) {\n        this._userContextAction = userContextAction;\n        this._schemaContextAction = schemaContextAction;\n        this._recordContextAction = getRecordContextFactory(recordId, modelManager);\n        this._modelManager = modelManager;\n    }\n\n    updateRecord(data) {\n        const updateRecordAction = updateRecordFactory(data, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema =>\n                this._recordContextAction(schema.id).then(record => updateRecordAction(record.id, schema.id))\n            )\n            .then(() => true);\n    }\n\n    removeRecord() {\n        const removeRecordAction = removeRecordFactory(this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema =>\n                this._recordContextAction(schema.id).then(record => removeRecordAction(record.id, schema.id))\n            )\n            .then(() => true);\n    }\n\n    getData() {\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema => this._recordContextAction(schema.id));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/recordContext/RecordContext.js","export default function updateRecordFactory(data, modelManager) {\n    return (recordId, schemaId) =>\n        modelManager\n            .getModels()\n            .Record.update(\n                { data: data },\n                {\n                    where: {\n                        id: recordId,\n                        SchemaId: schemaId\n                    }\n                }\n            )\n\n            .then(record => record);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/recordContext/actions/updateRecordFactory.js","export default function removeRecordFactory(modelManager) {\n    return (recordId, schemaId) =>\n        modelManager\n            .getModels()\n            .Record.destroy({\n                where: {\n                    id: recordId,\n                    SchemaId: schemaId\n                }\n            })\n\n            .then(() => true);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/recordContext/actions/removeRecordFactory.js","export default function getContextRecordFactory(recordId, modelManager) {\n    return schemaId =>\n        modelManager\n            .getModels()\n            .Record.findOne({\n                where: {\n                    SchemaId: schemaId,\n                    id: recordId\n                },\n                raw: true\n            })\n            .then(record => {\n                if (!record) {\n                }\n                return record;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/recordContext/contextActions/getRecordContextFactory.js","export default function createSchemaFactory(schemaName, modelManager) {\n    return () =>\n        modelManager\n            .getModels()\n            .Schema.create(\n                {\n                    name: schemaName\n                },\n                {}\n            )\n            .then(entitySchema => {\n                return entitySchema;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/actions/createSchemaFactory.js","export default function getContextUserFactory(userId, modelManager) {\n    return () =>\n        modelManager\n            .getModels()\n            .User.findOne({\n                where: {\n                    UserId: userId\n                },\n                raw: true\n            })\n            .then(user => {\n                if (!user) {\n                }\n                return user;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/contextActions/getUserContextFactory.js","import throwIfNoSync from \"../../throwIfNoSync\";\nimport createUserRecordFactory from \"./actions/createUserRecordFactory\";\nimport updateUserRecordFactory from \"./actions/updateUserRecordFactory\";\n\nexport default class UserSchemaContext {\n    constructor(userContextAction, modelManager) {\n        this._userContextAction = userContextAction;\n        this._modelManager = modelManager;\n    }\n\n    createRecord(data) {\n        const createUserRecordAction = createUserRecordFactory(data, this._modelManager);\n        return throwIfNoSync(this._modelManager)\n            .then(() => createUserRecordAction())\n            .then(user => user.toJSON());\n    }\n\n    updateRecord(recordId, data) {\n        const updateUserRecordAction = updateUserRecordFactory(data, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => updateUserRecordAction(recordId))\n            .then(() => true);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userSchemaContext/UserSchemaContext.js","export default function createUserRecordFactory(userName, modelManager) {\n    return () =>\n        modelManager\n            .getModels()\n            .User.create(\n                {\n                    name: userName\n                },\n                {}\n            )\n            .then(user => {\n                return user;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userSchemaContext/actions/createUserRecordFactory.js","export default function updateUserRecordFactory(userName, modelManager) {\n    return recordId =>\n        modelManager\n            .getModels()\n            .User.update(\n                {\n                    name: userName\n                },\n                {\n                    where: {\n                        id: recordId\n                    }\n                }\n            )\n\n            .then(record => record);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userSchemaContext/actions/updateUserRecordFactory.js","const ROOT_USER_ID = Symbol(\"ROOT_USER_ID\");\nexport default ROOT_USER_ID;\n\n\n\n// WEBPACK FOOTER //\n// ./src/RootUser.js","import fs from \"fs\";\nimport path from \"path\";\nimport Sequelize from \"sequelize\";\nimport Overload from \"function-overloader\";\n\nexport default class ModelManager {\n    constructor() {\n        this._isSync = false;\n        Overload.when(Overload.INSTANCE(Sequelize))\n            .do(sequelize => {\n                this._sequelize = sequelize;\n            })\n            .else(config => {\n                this._sequelize = new Sequelize(config.dbname, config.user, config.password, {\n                    dialect: config.type,\n                    port: config.port,\n                    host: config.host,\n                    logging: config.logging\n                });\n            })\n            .execute(...arguments);\n        this._models = {};\n        fs.readdirSync(path.join(__dirname, \"models\"))\n            .filter(file => {\n                return file.indexOf(\".\") !== 0;\n            })\n            .forEach(file => {\n                const model = this._sequelize.import(path.join(__dirname, \"models\", file));\n                this._models[model.name] = model;\n            });\n        Object.values(this._models).forEach(model => {\n            if (model.associate) {\n                model.associate(this._models);\n            }\n        });\n    }\n\n    getDbInstance() {\n        return this._sequelize;\n    }\n\n    async sync(options) {\n        return this._sequelize.sync(options).then(() => {\n            this._isSync = true;\n        });\n    }\n\n    isSync() {\n        return this._isSync;\n    }\n\n    getModels() {\n        return this._models;\n    }\n\n    async authenticate() {\n        return this._sequelize\n            .authenticate()\n            .then(() => {})\n            .catch(err => {\n                console.error(\"Unable to connect to the database:\", err);\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ModelManager.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 24\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 25\n// module chunks = 0","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = 26\n// module chunks = 0","module.exports = require(\"function-overloader\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"function-overloader\"\n// module id = 27\n// module chunks = 0"],"sourceRoot":""}