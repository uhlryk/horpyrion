{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 8bb9547169ea47d04edc","webpack:///external \"bluebird\"","webpack:///./src/ModelManager.js","webpack:///./src/contexts/actions/getFactory.js","webpack:///./src/contexts/Context.js","webpack:///external \"babel-polyfill\"","webpack:///./src/index.js","webpack:///./src/Horpyrion.js","webpack:///./src/contexts/userContext/UserContext.js","webpack:///./src/contexts/actions/insertFactory.js","webpack:///external \"uuid\"","webpack:///./src/contexts/actions/updateFactory.js","webpack:///./src/contexts/actions/getListFactory.js","webpack:///./src/contexts/actions/removeFactory.js","webpack:///./src/contexts/userContext/schemaContext/SchemaContext.js","webpack:///./src/contexts/userContext/schemaContext/getSchemaContextFactory.js","webpack:///external \"mongodb\"","webpack:///./src/contexts/userContext/schemaContext/recordContext/RecordContext.js","webpack:///./src/contexts/userContext/schemaContext/recordContext/getRecordContextFactory.js","webpack:///./src/contexts/userContext/getUserContextFactory.js","webpack:///./src/contexts/ContextAction.js","webpack:///./src/throwIfNoSync.js","webpack:///./src/RootUser.js","webpack:///./src/InitDataManager.js"],"names":["ModelManager","configuration","_isSync","_configuration","_client","MongoClient","host","_db","Promise","resolve","reject","connect","err","console","log","db","dbName","close","MODEL","USER","SCHEMA","RECORD","ATTRIBUTE","getFactory","collectionName","modelManager","getDb","collection","findOne","id","entityId","docs","ContextAction","name","contextActionFunction","contextAction","_contextAction","copyContextAction","_modelManager","_name","addContextActionFunction","key","executeFactory","addAction","Context","getContextAction","getModelManager","modelId","resolveContextAction","then","context","getName","default","Horpyrion","options","initDataManager","InitDataManager","all","createSchemaIfNotExist","disconnect","UserContext","RootUser","ROOT_USER_ID","userId","schemaId","insertFactory","query","getListFactory","Object","assign","createContext","SchemaContext","setSchema","data","uuid","v4","insertOne","result","updateFactory","updateOne","$set","whereData","find","toArray","removeFactory","deleteOne","recordId","RecordContext","schemaName","schema","SchemaId","record","contextActions","_contextActions","slice","push","execute","concat","reduce","prevContextAction","contextObject","throwIfNoSync","isSync","Error","Symbol","horpyrion","_horpyrion","setRootUser","getSchema","insertSchema"],"mappings":"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","file":"horpyrion.server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8bb9547169ea47d04edc","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 0\n// module chunks = 0","import Promise from \"bluebird\";\nimport { MongoClient } from \"mongodb\";\n\nexport default class ModelManager {\n    static MODEL = {\n        USER: \"User\",\n        SCHEMA: \"Schema\",\n        RECORD: \"Record\",\n        ATTRIBUTE: \"Attribute\"\n    };\n\n    constructor(configuration) {\n        this._isSync = false;\n        this._configuration = configuration;\n        this._client = new MongoClient(this._configuration.host);\n    }\n\n    getDb() {\n        return this._db;\n    }\n\n    connect() {\n        return new Promise((resolve, reject) => {\n            this._client.connect(err => {\n                if (err) {\n                    console.log(\"ERROR\");\n                    console.log(err);\n                    return reject(err);\n                }\n                console.log(\"Connected successfully to server\");\n                this._isSync = true;\n                this._db = this._client.db(this._configuration.dbName);\n\n                return resolve();\n            });\n        });\n    }\n\n    disconnect() {\n        this._client.close();\n    }\n\n    isSync() {\n        return this._isSync;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ModelManager.js","import Promise from \"bluebird\";\nexport default function getFactory(collectionName, modelManager) {\n    return entityId =>\n        new Promise((resolve, reject) => {\n            modelManager\n                .getDb()\n                .collection(collectionName)\n                .findOne({ id: entityId }, (err, docs) => {\n                    if (err) {\n                        return reject(err);\n                    }\n                    return resolve(docs);\n                });\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/getFactory.js","import insertFactory from \"./actions/insertFactory\";\nimport updateFactory from \"./actions/updateFactory\";\nimport getFactory from \"./actions/getFactory\";\nimport getListFactory from \"./actions/getListFactory\";\nimport removeFactory from \"./actions/removeFactory\";\n\nexport default class ContextAction {\n    constructor({ name, contextActionFunction, contextAction, modelManager }) {\n        this._contextAction = contextAction.copyContextAction();\n        this._modelManager = modelManager;\n        this._name = name;\n        if (contextActionFunction) {\n            this.addContextActionFunction(this._name, contextActionFunction);\n        }\n    }\n\n    getName() {\n        return this._name;\n    }\n\n    addContextActionFunction(key, executeFactory) {\n        this._contextAction.addAction(key, executeFactory);\n    }\n\n    getContextAction() {\n        return this._contextAction;\n    }\n\n    resolveContextAction() {\n        return this._contextAction.resolve();\n    }\n\n    getModelManager() {\n        return this._modelManager;\n    }\n\n    createContext(id, Context) {\n        return new Context(id, this.getContextAction(), this.getModelManager());\n    }\n\n    insertFactory(modelId) {\n        return insertFactory(modelId, this.getModelManager());\n    }\n\n    updateFactory(modelId) {\n        return updateFactory(modelId, this.getModelManager());\n    }\n\n    getFactory(modelId) {\n        return getFactory(modelId, this.getModelManager());\n    }\n\n    getListFactory(modelId) {\n        return getListFactory(modelId, this.getModelManager());\n    }\n\n    removeFactory(modelId) {\n        return removeFactory(modelId, this.getModelManager());\n    }\n\n    getData() {\n        return this.resolveContextAction().then(context => context[this.getName()]);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/Context.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 5\n// module chunks = 0","export default from \"./Horpyrion\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Promise from \"bluebird\";\nimport UserContext from \"./contexts/userContext/UserContext\";\nimport ContextAction from \"./contexts/ContextAction\";\nimport RootUser from \"./RootUser\";\nimport ModelManager from \"./ModelManager\";\nimport InitDataManager from \"./InitDataManager\";\n\nexport default class Horpyrion {\n    constructor(configuration) {\n        this._configuration = configuration;\n    }\n    connect(options) {\n        this._modelManager = new ModelManager(this._configuration);\n        const initDataManager = new InitDataManager(this);\n        return this._modelManager.connect(options).then(() => {\n            return Promise.all([initDataManager.createSchemaIfNotExist(\"SYSTEM_USER\")]);\n        });\n    }\n\n    disconnect() {\n        return this._modelManager.disconnect();\n    }\n\n    setRootUser() {\n        const contextAction = new ContextAction(this._modelManager);\n        return new UserContext(RootUser.ROOT_USER_ID, contextAction, this._modelManager);\n    }\n\n    setUser(userId) {\n        const contextAction = new ContextAction(this._modelManager);\n        return new UserContext(userId, contextAction, this._modelManager);\n    }\n\n    getDb() {\n        return this._modelManager.getDb();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Horpyrion.js","import Context from \"../Context\";\nimport SchemaContext from \"./schemaContext/SchemaContext\";\nimport getUserContextFactory from \"./getUserContextFactory\";\nimport ModelManager from \"../../ModelManager\";\n\nexport default class UserContext extends Context {\n    constructor(userId, contextAction, modelManager) {\n        super({\n            name: \"user\",\n            contextActionFunction: getUserContextFactory(userId),\n            contextAction,\n            modelManager\n        });\n    }\n\n    insertSchema(schemaId) {\n        return this.resolveContextAction().then(() => this.insertFactory(ModelManager.MODEL.SCHEMA)({ id: schemaId }));\n    }\n\n    getSchema(schemaId) {\n        return this.resolveContextAction().then(() => this.getFactory(ModelManager.MODEL.SCHEMA)(schemaId));\n    }\n\n    getSchemas(query) {\n        return this.resolveContextAction().then(() =>\n            this.getListFactory(ModelManager.MODEL.SCHEMA)(Object.assign({}, query))\n        );\n    }\n\n    setSchema(schemaId) {\n        return this.createContext(schemaId, SchemaContext);\n    }\n\n    setUserSchema() {\n        return this.setSchema(\"SYSTEM_USER\");\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/UserContext.js","import Promise from \"bluebird\";\nimport uuid from \"uuid\";\nexport default function insertFactory(collectionName, modelManager) {\n    return (data = {}) =>\n        new Promise((resolve, reject) => {\n            let id;\n            if (data.id) {\n                id = data.id;\n            } else {\n                id = uuid.v4();\n            }\n            modelManager\n                .getDb()\n                .collection(collectionName)\n                .insertOne(Object.assign({}, data, { id: id }), (err, result) => {\n                    if (err) {\n                        return reject(err);\n                    }\n                    return resolve(id);\n                });\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/insertFactory.js","module.exports = require(\"uuid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uuid\"\n// module id = 10\n// module chunks = 0","import Promise from \"bluebird\";\nexport default function updateFactory(collectionName, modelManager) {\n    return (entityId, data = {}) =>\n        new Promise((resolve, reject) => {\n            modelManager\n                .getDb()\n                .collection(collectionName)\n                .updateOne({ id: entityId }, { $set: data }, (err, docs) => {\n                    if (err) {\n                        return reject(err);\n                    }\n                    return resolve(true);\n                });\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/updateFactory.js","import Promise from \"bluebird\";\nexport default function getListFactory(collectionName, modelManager) {\n    return (whereData = {}) =>\n        new Promise((resolve, reject) => {\n            modelManager\n                .getDb()\n                .collection(collectionName)\n                .find(whereData)\n                .toArray((err, docs) => {\n                    if (err) {\n                        return reject(err);\n                    }\n                    return resolve(docs);\n                });\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/getListFactory.js","import Promise from \"bluebird\";\nexport default function removeFactory(collectionName, modelManager) {\n    return entityId =>\n        new Promise((resolve, reject) => {\n            modelManager\n                .getDb()\n                .collection(collectionName)\n                .deleteOne({ id: entityId }, err => {\n                    if (err) {\n                        return reject(err);\n                    }\n                    return resolve(true);\n                });\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/removeFactory.js","import Context from \"../../Context\";\nimport getSchemaContextFactory from \"./getSchemaContextFactory\";\nimport RecordContext from \"./recordContext/RecordContext\";\nimport ModelManager from \"../../../ModelManager\";\n\nexport default class SchemaContext extends Context {\n    constructor(schemaId, contextAction, modelManager) {\n        super({\n            name: \"schema\",\n            contextActionFunction: getSchemaContextFactory(schemaId),\n            contextAction,\n            modelManager\n        });\n    }\n\n    setRecord(recordId) {\n        return new RecordContext(recordId, this._contextAction, this._modelManager);\n    }\n\n    getRecord(recordId) {\n        return this.resolveContextAction().then(() => this.getFactory(ModelManager.MODEL.RECORD)(recordId));\n    }\n\n    updateSchema(schemaName) {\n        return this.resolveContextAction()\n            .then(({ schema }) => this.updateFactory(ModelManager.MODEL.SCHEMA)(schema.id, { name: schemaName }))\n            .then(() => true);\n    }\n\n    removeSchema() {\n        return this.resolveContextAction()\n            .then(({ schema }) => this.removeFactory(ModelManager.MODEL.SCHEMA)(schema.id))\n            .then(() => true);\n    }\n\n    getRecords(query) {\n        return this.resolveContextAction().then(({ schema }) =>\n            this.getListFactory(ModelManager.MODEL.RECORD)(Object.assign({}, query, { SchemaId: schema.id }))\n        );\n    }\n\n    insertRecord(data) {\n        return this.resolveContextAction()\n            .then(({ schema }) => this.insertFactory(ModelManager.MODEL.RECORD)({ data: data, SchemaId: schema.id }))\n            .then(recordId => recordId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/schemaContext/SchemaContext.js","import ModelManager from \"../../../ModelManager\";\nimport getFactory from \"../../actions/getFactory\";\n\nexport default schemaId => modelManager => () => getFactory(ModelManager.MODEL.SCHEMA, modelManager)(schemaId);\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/schemaContext/getSchemaContextFactory.js","module.exports = require(\"mongodb\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongodb\"\n// module id = 16\n// module chunks = 0","import Context from \"../../../Context\";\nimport getRecordContextFactory from \"./getRecordContextFactory\";\nimport ModelManager from \"../../../../ModelManager\";\n\nexport default class RecordContext extends Context {\n    constructor(recordId, contextAction, modelManager) {\n        super({\n            name: \"record\",\n            contextActionFunction: getRecordContextFactory(recordId),\n            contextAction,\n            modelManager\n        });\n    }\n\n    updateRecord(data) {\n        return this.resolveContextAction()\n            .then(({ record }) => this.updateFactory(ModelManager.MODEL.RECORD)(record.id, { data: data }))\n            .then(() => true);\n    }\n\n    removeRecord() {\n        return this.resolveContextAction()\n            .then(({ record }) => this.removeFactory(ModelManager.MODEL.RECORD)(record.id))\n            .then(() => true);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/schemaContext/recordContext/RecordContext.js","import ModelManager from \"../../../../ModelManager\";\nimport getFactory from \"../../../actions/getFactory\";\n\nexport default recordId => modelManager => () => getFactory(ModelManager.MODEL.RECORD, modelManager)(recordId);\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/schemaContext/recordContext/getRecordContextFactory.js","import ModelManager from \"../../ModelManager\";\nimport getFactory from \"../actions/getFactory\";\n\nexport default userId => modelManager => () => getFactory(ModelManager.MODEL.USER, modelManager)(userId);\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/getUserContextFactory.js","import throwIfNoSync from \"../throwIfNoSync\";\n\nexport default class ContextAction {\n    constructor(modelManager, contextActions = []) {\n        this._contextActions = contextActions;\n        this._modelManager = modelManager;\n    }\n\n    copyContextAction() {\n        return new ContextAction(this._modelManager, this._contextActions.slice());\n    }\n\n    addAction(key, executeFactory) {\n        this._contextActions.push({ key, execute: executeFactory(this._modelManager) });\n    }\n\n    createContextAction(key, executeFactory) {\n        return new ContextAction(\n            this._modelManager,\n            this._contextActions.concat([{ key, execute: executeFactory(this._modelManager) }])\n        );\n    }\n\n    resolve() {\n        return this._contextActions.reduce((prevContextAction, contextAction) => {\n            return prevContextAction.then(contextObject =>\n                contextAction.execute(contextObject).then(context => {\n                    return Object.assign({}, contextObject, { [contextAction.key]: context });\n                })\n            );\n        }, throwIfNoSync(this._modelManager).then(() => {}));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/ContextAction.js","import Promise from \"bluebird\";\nexport default function throwIfNoSync(modelManager) {\n    if (modelManager && modelManager.isSync()) {\n        return Promise.resolve();\n    } else {\n        return Promise.reject(new Error(\"No synchronization with database. Run sync() method\"));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/throwIfNoSync.js","const ROOT_USER_ID = Symbol(\"ROOT_USER_ID\");\nexport default ROOT_USER_ID;\n\n\n\n// WEBPACK FOOTER //\n// ./src/RootUser.js","export default class InitDataManager {\n    constructor(horpyrion) {\n        this._horpyrion = horpyrion;\n    }\n    createSchemaIfNotExist(schemaId) {\n        return this._horpyrion\n            .setRootUser()\n            .getSchema(schemaId)\n            .then(schema => {\n                if (!schema) {\n                    return this._horpyrion.setRootUser().insertSchema(schemaId);\n                }\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/InitDataManager.js"],"sourceRoot":""}