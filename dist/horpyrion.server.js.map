{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 674b3d65f6b01a99a12b","webpack:///./src/throwIfNoSync.js","webpack:///./src/contexts/actions/createFactory.js","webpack:///./src/contexts/actions/getFactory.js","webpack:///./src/contexts/actions/getListFactory.js","webpack:///external \"babel-polyfill\"","webpack:///./src/index.js","webpack:///./src/Horpyrion.js","webpack:///./src/contexts/userContext/UserContext.js","webpack:///./src/contexts/schemaContext/SchemaContext.js","webpack:///./src/contexts/schemaContext/actions/updateRecordFactory.js","webpack:///./src/contexts/schemaContext/actions/removeRecordFactory.js","webpack:///./src/contexts/schemaContext/contextActions/getSchemaContextFactory.js","webpack:///./src/contexts/recordContext/RecordContext.js","webpack:///./src/contexts/recordContext/actions/updateRecordFactory.js","webpack:///./src/contexts/recordContext/actions/removeRecordFactory.js","webpack:///./src/contexts/recordContext/contextActions/getRecordContextFactory.js","webpack:///./src/contexts/userContext/contextActions/getUserContextFactory.js","webpack:///./src/contexts/userSchemaContext/UserSchemaContext.js","webpack:///./src/contexts/userSchemaContext/actions/updateUserRecordFactory.js","webpack:///./src/RootUser.js","webpack:///./src/ModelManager.js","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"sequelize\"","webpack:///external \"function-overloader\""],"names":["throwIfNoSync","modelManager","isSync","Promise","resolve","reject","Error","createFactory","modelId","data","params","getModels","create","Object","assign","then","entity","getFactory","elementId","findOne","where","id","raw","record","getListFactory","whereData","findAll","default","Horpyrion","configuration","_configuration","options","_modelManager","ModelManager","authenticate","sync","UserContext","RootUser","ROOT_USER_ID","userId","getDbInstance","_userContextAction","schemaName","createSchemaAction","name","schema","toJSON","schemaId","SchemaContext","UserSchemaContext","userContextAction","_schemaContextAction","recordId","RecordContext","attributeName","attributeType","getRecordAction","SchemaId","query","getRecordListAction","recordList","createRecordAction","updateRecordAction","removeRecordAction","updateRecordFactory","Record","update","removeRecordFactory","destroy","getContextSchemaFactory","Schema","schemaContextAction","_recordContextAction","getContextRecordFactory","getContextUserFactory","User","UserId","user","createUserRecordAction","updateUserRecordAction","getUserRecordAction","userRecord","getUserRecordListAction","userRecordList","updateUserRecordFactory","userName","Symbol","_isSync","when","Overload","INSTANCE","Sequelize","do","_sequelize","sequelize","else","config","dbname","password","dialect","type","port","host","logging","execute","arguments","_models","fs","readdirSync","path","join","__dirname","filter","file","indexOf","forEach","model","import","values","associate","catch","console","error","err"],"mappings":"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","file":"horpyrion.server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 674b3d65f6b01a99a12b","export default function throwIfNoSync(modelManager) {\n    if (modelManager && modelManager.isSync()) {\n        return Promise.resolve();\n    } else {\n        return Promise.reject(new Error(\"No synchronization with database. Run sync() method\"));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/throwIfNoSync.js","export default function createFactory(modelId, data = {}, modelManager) {\n    return (params = {}) =>\n        modelManager\n            .getModels()\n            [modelId].create(Object.assign({}, data, params), {})\n            .then(entity => {\n                return entity;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/createFactory.js","export default function getFactory(modelId, elementId, modelManager) {\n    return () =>\n        modelManager\n            .getModels()\n            [modelId].findOne({\n                where: {\n                    id: elementId\n                },\n                raw: true\n            })\n            .then(record => {\n                return record;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/getFactory.js","export default function getListFactory(modelId, whereData = {}, modelManager) {\n    return (params = {}) =>\n        modelManager\n            .getModels()\n            [modelId].findAll({\n                where: Object.assign({}, whereData, params),\n                raw: true\n            })\n            .then(entity => {\n                return entity;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/actions/getListFactory.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 5\n// module chunks = 0","export default from \"./Horpyrion\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import UserContext from \"./contexts/userContext/UserContext\";\nimport RootUser from \"./RootUser\";\nimport ModelManager from \"./ModelManager\";\n\nexport default class Horpyrion {\n    constructor(configuration) {\n        this._configuration = configuration;\n    }\n    async sync(options) {\n        this._modelManager = new ModelManager(this._configuration);\n        await this._modelManager.authenticate();\n        await this._modelManager.sync(options);\n    }\n\n    setRootUser() {\n        return new UserContext(RootUser.ROOT_USER_ID, this._modelManager);\n    }\n\n    setUser(userId) {\n        return new UserContext(userId, this._modelManager);\n    }\n\n    getDbInstance() {\n        return this._modelManager.getDbInstance();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Horpyrion.js","import SchemaContext from \"../schemaContext/SchemaContext\";\nimport createFactory from \"../actions/createFactory\";\nimport throwIfNoSync from \"../../throwIfNoSync\";\nimport getUserContextFactory from \"./contextActions/getUserContextFactory\";\nimport UserSchemaContext from \"../userSchemaContext/UserSchemaContext\";\n\nexport default class UserContext {\n    constructor(userId, modelManager) {\n        this._userContextAction = getUserContextFactory(userId, modelManager);\n        this._modelManager = modelManager;\n    }\n\n    createSchema(schemaName) {\n        const createSchemaAction = createFactory(\"Schema\", { name: schemaName }, this._modelManager);\n        return throwIfNoSync(this._modelManager)\n            .then(() => createSchemaAction())\n            .then(schema => schema.toJSON());\n    }\n\n    setSchema(schemaId) {\n        return new SchemaContext(schemaId, this._userContextAction, this._modelManager);\n    }\n\n    setUserSchema() {\n        return new UserSchemaContext(this._userContextAction, this._modelManager);\n    }\n\n    getData() {\n        return throwIfNoSync(this._modelManager).then(() => this._userContextAction());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/UserContext.js","import createFactory from \"../actions/createFactory\";\nimport getFactory from \"../actions/getFactory\";\nimport getListFactory from \"../actions/getListFactory\";\nimport updateRecordFactory from \"./actions/updateRecordFactory\";\nimport removeRecordFactory from \"./actions/removeRecordFactory\";\nimport throwIfNoSync from \"../../throwIfNoSync\";\nimport getSchemaContextFactory from \"./contextActions/getSchemaContextFactory\";\nimport RecordContext from \"../recordContext/RecordContext\";\n\nexport default class SchemaContext {\n    constructor(schemaId, userContextAction, modelManager) {\n        this._userContextAction = userContextAction;\n        this._schemaContextAction = getSchemaContextFactory(schemaId, modelManager);\n        this._modelManager = modelManager;\n    }\n\n    setRecord(recordId) {\n        return new RecordContext(recordId, this._schemaContextAction, this._userContextAction, this._modelManager);\n    }\n\n    async addAttribute(attributeName, attributeType) {\n        return false;\n    }\n\n    getData() {\n        return throwIfNoSync(this._modelManager).then(() => this._schemaContextAction());\n    }\n\n    getRecord(recordId) {\n        const getRecordAction = getFactory(\"Record\", recordId, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema =>\n                getRecordAction().then(record => {\n                    if (record && record.SchemaId === schema.id) {\n                        return record;\n                    } else {\n                        return null;\n                    }\n                })\n            );\n    }\n\n    getRecords(query) {\n        const getRecordListAction = getListFactory(\"Record\", query, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema => getRecordListAction({ SchemaId: schema.id }))\n            .then(recordList => recordList);\n    }\n\n    createRecord(data) {\n        const createRecordAction = createFactory(\"Record\", { data: data }, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema => createRecordAction({ SchemaId: schema.id }))\n            .then(record => record.toJSON());\n    }\n\n    updateRecord(recordId, data) {\n        const updateRecordAction = updateRecordFactory(data, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema => updateRecordAction(recordId, schema.id))\n            .then(() => true);\n    }\n\n    removeRecord(recordId) {\n        const removeRecordAction = removeRecordFactory(this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema => removeRecordAction(recordId, schema.id))\n            .then(() => true);\n    }\n\n    async getAttributes() {\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/schemaContext/SchemaContext.js","export default function updateRecordFactory(data, modelManager) {\n    return (recordId, schemaId) =>\n        modelManager\n            .getModels()\n            .Record.update(\n                { data: data },\n                {\n                    where: {\n                        id: recordId,\n                        SchemaId: schemaId\n                    }\n                }\n            )\n\n            .then(record => record);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/schemaContext/actions/updateRecordFactory.js","export default function removeRecordFactory(modelManager) {\n    return (recordId, schemaId) =>\n        modelManager\n            .getModels()\n            .Record.destroy({\n                where: {\n                    id: recordId,\n                    SchemaId: schemaId\n                }\n            })\n\n            .then(() => true);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/schemaContext/actions/removeRecordFactory.js","export default function getContextSchemaFactory(schemaId, modelManager) {\n    return () =>\n        modelManager\n            .getModels()\n            .Schema.findOne({\n                where: {\n                    id: schemaId\n                },\n                raw: true\n            })\n            .then(schema => {\n                if (!schema) {\n                }\n                return schema;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/schemaContext/contextActions/getSchemaContextFactory.js","import updateRecordFactory from \"./actions/updateRecordFactory\";\nimport removeRecordFactory from \"./actions/removeRecordFactory\";\nimport throwIfNoSync from \"../../throwIfNoSync\";\nimport getRecordContextFactory from \"./contextActions/getRecordContextFactory\";\n\nexport default class RecordContext {\n    constructor(recordId, schemaContextAction, userContextAction, modelManager) {\n        this._userContextAction = userContextAction;\n        this._schemaContextAction = schemaContextAction;\n        this._recordContextAction = getRecordContextFactory(recordId, modelManager);\n        this._modelManager = modelManager;\n    }\n\n    updateRecord(data) {\n        const updateRecordAction = updateRecordFactory(data, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema =>\n                this._recordContextAction(schema.id).then(record => updateRecordAction(record.id, schema.id))\n            )\n            .then(() => true);\n    }\n\n    removeRecord() {\n        const removeRecordAction = removeRecordFactory(this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema =>\n                this._recordContextAction(schema.id).then(record => removeRecordAction(record.id, schema.id))\n            )\n            .then(() => true);\n    }\n\n    getData() {\n        return throwIfNoSync(this._modelManager)\n            .then(() => this._schemaContextAction())\n            .then(schema => this._recordContextAction(schema.id));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/recordContext/RecordContext.js","export default function updateRecordFactory(data, modelManager) {\n    return (recordId, schemaId) =>\n        modelManager\n            .getModels()\n            .Record.update(\n                { data: data },\n                {\n                    where: {\n                        id: recordId,\n                        SchemaId: schemaId\n                    }\n                }\n            )\n\n            .then(record => record);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/recordContext/actions/updateRecordFactory.js","export default function removeRecordFactory(modelManager) {\n    return (recordId, schemaId) =>\n        modelManager\n            .getModels()\n            .Record.destroy({\n                where: {\n                    id: recordId,\n                    SchemaId: schemaId\n                }\n            })\n\n            .then(() => true);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/recordContext/actions/removeRecordFactory.js","export default function getContextRecordFactory(recordId, modelManager) {\n    return schemaId =>\n        modelManager\n            .getModels()\n            .Record.findOne({\n                where: {\n                    SchemaId: schemaId,\n                    id: recordId\n                },\n                raw: true\n            })\n            .then(record => {\n                if (!record) {\n                }\n                return record;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/recordContext/contextActions/getRecordContextFactory.js","export default function getContextUserFactory(userId, modelManager) {\n    return () =>\n        modelManager\n            .getModels()\n            .User.findOne({\n                where: {\n                    UserId: userId\n                },\n                raw: true\n            })\n            .then(user => {\n                if (!user) {\n                }\n                return user;\n            });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userContext/contextActions/getUserContextFactory.js","import throwIfNoSync from \"../../throwIfNoSync\";\nimport createFactory from \"../actions/createFactory\";\nimport getFactory from \"../actions/getFactory\";\nimport updateUserRecordFactory from \"./actions/updateUserRecordFactory\";\nimport getListFactory from \"../actions/getListFactory\";\n\nexport default class UserSchemaContext {\n    constructor(userContextAction, modelManager) {\n        this._userContextAction = userContextAction;\n        this._modelManager = modelManager;\n    }\n\n    createRecord(name) {\n        const createUserRecordAction = createFactory(\"User\", { name: name }, this._modelManager);\n        return throwIfNoSync(this._modelManager)\n            .then(() => createUserRecordAction())\n            .then(user => user.toJSON());\n    }\n\n    updateRecord(recordId, data) {\n        const updateUserRecordAction = updateUserRecordFactory(data, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => updateUserRecordAction(recordId))\n            .then(() => true);\n    }\n\n    getRecord(userId) {\n        const getUserRecordAction = getFactory(\"User\", userId, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => getUserRecordAction())\n            .then(userRecord => {\n                if (userRecord) {\n                    return userRecord;\n                } else {\n                    return null;\n                }\n            });\n    }\n\n    getRecords(query) {\n        const getUserRecordListAction = getListFactory(\"User\", query, this._modelManager);\n\n        return throwIfNoSync(this._modelManager)\n            .then(() => getUserRecordListAction())\n            .then(userRecordList => userRecordList);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userSchemaContext/UserSchemaContext.js","export default function updateUserRecordFactory(userName, modelManager) {\n    return recordId =>\n        modelManager\n            .getModels()\n            .User.update(\n                {\n                    name: userName\n                },\n                {\n                    where: {\n                        id: recordId\n                    }\n                }\n            )\n\n            .then(record => record);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contexts/userSchemaContext/actions/updateUserRecordFactory.js","const ROOT_USER_ID = Symbol(\"ROOT_USER_ID\");\nexport default ROOT_USER_ID;\n\n\n\n// WEBPACK FOOTER //\n// ./src/RootUser.js","import fs from \"fs\";\nimport path from \"path\";\nimport Sequelize from \"sequelize\";\nimport Overload from \"function-overloader\";\n\nexport default class ModelManager {\n    constructor() {\n        this._isSync = false;\n        Overload.when(Overload.INSTANCE(Sequelize))\n            .do(sequelize => {\n                this._sequelize = sequelize;\n            })\n            .else(config => {\n                this._sequelize = new Sequelize(config.dbname, config.user, config.password, {\n                    dialect: config.type,\n                    port: config.port,\n                    host: config.host,\n                    logging: config.logging\n                });\n            })\n            .execute(...arguments);\n        this._models = {};\n        fs.readdirSync(path.join(__dirname, \"models\"))\n            .filter(file => {\n                return file.indexOf(\".\") !== 0;\n            })\n            .forEach(file => {\n                const model = this._sequelize.import(path.join(__dirname, \"models\", file));\n                this._models[model.name] = model;\n            });\n        Object.values(this._models).forEach(model => {\n            if (model.associate) {\n                model.associate(this._models);\n            }\n        });\n    }\n\n    getDbInstance() {\n        return this._sequelize;\n    }\n\n    async sync(options) {\n        return this._sequelize.sync(options).then(() => {\n            this._isSync = true;\n        });\n    }\n\n    isSync() {\n        return this._isSync;\n    }\n\n    getModels() {\n        return this._models;\n    }\n\n    async authenticate() {\n        return this._sequelize\n            .authenticate()\n            .then(() => {})\n            .catch(err => {\n                console.error(\"Unable to connect to the database:\", err);\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ModelManager.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = 24\n// module chunks = 0","module.exports = require(\"function-overloader\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"function-overloader\"\n// module id = 25\n// module chunks = 0"],"sourceRoot":""}